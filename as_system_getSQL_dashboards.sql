IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = 
            OBJECT_ID(N'dbo.as_system_getSQL_dashboards'))
	DROP PROCEDURE dbo.as_system_getSQL_dashboards
GO

create proc dbo.as_system_getSQL_dashboards @code nvarchar(32), @overwrite bit = 1 as
select top 1 cast('' as nvarchar(max)) + 'declare @dashboardID int; set @dashboardID = null; ' + CHAR(13)+CHAR(10)
	+ 'select top 1 @dashboardID = d.id from as_dashboards as d where d.code = ' + isnull('''' + d.code + '''', 'null') + ' order by d.id; ' + CHAR(13)+CHAR(10)
	+ 'begin try' + CHAR(13)+CHAR(10)
		+ 'if @dashboardID > 0 begin ' + CHAR(13)+CHAR(10)
			+ (case @overwrite when 1 then
			'update as_dashboards set [code] = ' + isnull('''' + replace(d.code, '''', '''''') + '''', 'null') + CHAR(13)+CHAR(10) 
				+ ',[title] = ' + isnull('''' + replace(d.title, '''', '''''') + '''', 'null') + CHAR(13)+CHAR(10)
				+ ',[subtitle] = ' + isnull('''' + replace(d.subtitle, '''', '''''') + '''', 'null') + CHAR(13)+CHAR(10) 
				+ ',[users] = ' + isnull('''' + replace(d.users, '''', '''''') + '''', 'null')  + CHAR(13)+CHAR(10) 
				+ ',[roles] = ' + isnull('''' + replace(d.roles, '''', '''''') + '''', 'null')  + CHAR(13)+CHAR(10)
				+ ' where id = @dashboardID;' + CHAR(13)+CHAR(10) 
			+ 'print N''Дашборд ' + @code + ' обновлен'''	+ CHAR(13)+CHAR(10)
			else 'print N''Дашборд ' + @code + ' существует и не будет перезаписан'''	+ CHAR(13)+CHAR(10) end)
		+ ' end; else begin' + CHAR(13)+CHAR(10) 
			+ ' insert into as_dashboards ([code],[title],[subtitle],[users],[roles]) VALUES ( ' + CHAR(13)+CHAR(10)
				+ stuff(COALESCE(', ''' + RTRIM(replace(d.code, '''', '''''')) + '''', ', null')
					+ COALESCE(', ''' + RTRIM(replace(d.title, '''', '''''')) + '''', ', null') + CHAR(13)+CHAR(10) 
					+ COALESCE(', ''' + RTRIM(replace(d.subtitle, '''', '''''')) + '''', ', null')
					+ COALESCE(', ''' + RTRIM(replace(d.users, '''', '''''')) + '''', ', null') + CHAR(13)+CHAR(10)
					+ COALESCE(', ''' + RTRIM(replace(d.roles, '''', '''''')) + '''', ', null') + CHAR(13)+CHAR(10)
					+'); ' + CHAR(13)+CHAR(10) 
				, 1, 2, '')
				+ 'select @dashboardID = scope_identity();' + CHAR(13)+CHAR(10)
				+ 'print N''Дашборд ' + @code + ' добавлен''' + CHAR(13)+CHAR(10)
			+ 'end;' + CHAR(13)+CHAR(10)
	+ 'end try' + CHAR(13)+CHAR(10)
	+ 'begin catch' + CHAR(13)+CHAR(10)
		+ 'print N''При обновлении\добавлении дашборда ' + @code + ' возникла ошибка: '' + error_message()'	+ CHAR(13)+CHAR(10)
	+ 'end catch' + CHAR(13)+ CHAR(13)+CHAR(10)
	+ (case @overwrite when 1 then
	'begin try' + CHAR(13)+CHAR(10)
		+ 'delete from as_dashboardPanels where as_dashboardPanels.dashboardID = @dashboardID;' + CHAR(13)+CHAR(10)
			+ 'print N''Панели дашборда ' + @code + ' удалены''' + CHAR(13)+CHAR(10)		
	+ 'end try' + CHAR(13)+CHAR(10)
	+ 'begin catch' + CHAR(13)+CHAR(10)
		+ 'print N''При удалении панелей дашборда ' + @code + ' возникла ошибка: '' + error_message()'	+ CHAR(13)+CHAR(10)
	+ 'end catch' + CHAR(13)+ CHAR(13)+CHAR(10)
	else 'print N''Имеющиеся панели не будут изменены''' + CHAR(13)+ CHAR(13)+CHAR(10) end)
	+ (select
		'begin try' + CHAR(13)+CHAR(10)	
			+ (case @overwrite when 0 then
				'if (not exists(select 1 from as_dashboardPanels where code =''' + dp.code + '''))' + CHAR(13)+CHAR(10)
				+ 'begin' + CHAR(13)+CHAR(10)
				else '' end)
				+ ' insert into as_dashboardPanels ([dashboardID],[title],[ord],[col],[html],[code]' + CHAR(13)+CHAR(10)
					+ ',[cacheMinutes],[type],[isDisabled],[height]) VALUES ( @dashboardID, ' + CHAR(13)+CHAR(10)		
					+ stuff(COALESCE(', ''' + RTRIM(replace(dp.title, '''', '''''')) + '''', ', null')
						+ COALESCE(', ' + RTRIM(dp.ord), ', null') + CHAR(13)+CHAR(10)
						+ COALESCE(', ' + RTRIM(dp.col), ', null') + CHAR(13)+CHAR(10)
						+ COALESCE(', ''' + RTRIM(replace(dp.html, '''', '''''')) + '''', ', null') + CHAR(13)+CHAR(10)
						+ COALESCE(', ''' + RTRIM(replace(dp.code, '''', '''''')) + '''', ', null') + CHAR(13)+CHAR(10)
						+ COALESCE(', ' + RTRIM(dp.cacheMinutes), ', null') + CHAR(13)+CHAR(10)
						+ COALESCE(', ''' + RTRIM(replace(dp.type, '''', '''''')) + '''', ', null') + CHAR(13)+CHAR(10)
						+ COALESCE(', ' + RTRIM(dp.isDisabled), ', null') + CHAR(13)+CHAR(10)
						+ COALESCE(', ' + RTRIM(dp.height), ', null') + CHAR(13)+CHAR(10)
						, 1, 2, '') + ');' + CHAR(13)+CHAR(10)
					+ 'print N''Панель ' + dp.code + ' дашборда добавлена''' + CHAR(13)+CHAR(10)				
			+ (case @overwrite when 0 then
				+ 'end' + CHAR(13)+CHAR(10) 
				+ 'else ' + CHAR(13)+CHAR(10) 
				+ 'print N''Панель ' + dp.code + ' дашборда уже существует и не будет перезаписана''' + CHAR(13)+CHAR(10)
				else '' end)
		+ 'end try' + CHAR(13)+CHAR(10)
		+ 'begin catch' + CHAR(13)+CHAR(10)
			+ 'print N''При добалении панели ' + dp.code + ' дашборда возникла ошибка: '' + error_message()'	+ CHAR(13)+CHAR(10)
		+ 'end catch' + CHAR(13)+ CHAR(13)+CHAR(10) from as_dashboardPanels as dp where d.id = dp.dashboardID FOR XML PATH (''),TYPE).value('.','NVARCHAR(MAX)')
	+ dbo.as_system_getSQL_procs ('dashboard_' + @code + '[_]', @overwrite) +CHAR(13)+CHAR(10)
	+'--Конец скрипта'
	as Result from as_dashboards as d where d.code = @code order by d.id;
