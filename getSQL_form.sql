create proc as_system_getSQL_form  @code nvarchar(32) as
select top 1 'declare @formID int, @columnID int, @datatypeID int; set @formID = null; ' + CHAR(13)+CHAR(10)
		+ 'create table #errors (type nvarchar(32), code nvarchar(32), message nvarchar(2048));' + CHAR(13)+CHAR(10)
		+ 'select top 1 @formID = f.id from as_forms as f where f.code = ' + isnull('''' + f.code + '''', 'null') + ' order by f.id; ' + CHAR(13)+CHAR(10)
		+ 'begin try' + CHAR(13)+CHAR(10)
		+ 'if @formID > 0 begin ' + CHAR(13)+CHAR(10) 
			+'update as_forms set [code] = ' + isnull('''' + replace(f.code, '''', '''''') + '''', 'null') + CHAR(13)+CHAR(10) 
				+ ',[title] = ' + isnull('''' + replace(f.title, '''', '''''') + '''', 'null') + CHAR(13)+CHAR(10)
				+ ',[subtitle] = ' + isnull('''' + replace(f.subtitle, '''', '''''') + '''', 'null') + CHAR(13)+CHAR(10) 
				+ ',[resultMessage] = ' + isnull('''' + replace(f.resultMessage, '''', '''''') + '''', 'null') + CHAR(13)+CHAR(10) 
				+ ',[successURL] = ' + isnull('''' + replace(f.successURL, '''', '''''') + '''', 'null')  + CHAR(13)+CHAR(10) 
				+ ',[makeup] = ' + isnull('''' + replace(f.makeup, '''', '''''') + '''', 'null')  + CHAR(13)+CHAR(10) 
				+ ',[hideFormAfterSubmit] = ' + isnull(cast(f.hideFormAfterSubmit as nvarchar), 'null')
				+ ',[buttonText] = ' + isnull('''' + replace(f.buttonText, '''', '''''') + '''', 'null')  + CHAR(13)+CHAR(10) 
				+ ',[users] = ' + isnull('''' + replace(f.users, '''', '''''') + '''', 'null')  + CHAR(13)+CHAR(10) 
				+ ',[roles] = ' + isnull('''' + replace(f.roles, '''', '''''') + '''', 'null')  + CHAR(13)+CHAR(10)
				+ ' where id = @formID;' + CHAR(13)+CHAR(10) 
				+ ' end; else begin' + CHAR(13)+CHAR(10) 
				+ ' insert into as_forms ([code],[title],[subtitle],[resultMessage],[successURL],[makeup]'+ CHAR(13)+CHAR(10) 
					+ ',[hideFormAfterSubmit],[buttonText],[users],[roles]) VALUES ( ' + CHAR(13)+CHAR(10)
						+ stuff(COALESCE(', ''' + RTRIM(replace(f.code, '''', '''''')) + '''', ', null')
							+ COALESCE(', ''' + RTRIM(replace(f.title, '''', '''''')) + '''', ', null') + CHAR(13)+CHAR(10) 
							+ COALESCE(', ''' + RTRIM(replace(f.subtitle, '''', '''''')) + '''', ', null')
							+ COALESCE(', ''' + RTRIM(replace(f.resultMessage, '''', '''''')) + '''', ', null')
							+ COALESCE(', ''' + RTRIM(replace(f.successURL, '''', '''''')) + '''', ', null') + CHAR(13)+CHAR(10) 
							+ COALESCE(', ''' + RTRIM(replace(f.makeup, '''', '''''')) + '''', ', null')
							+ COALESCE(', ' + RTRIM(f.hideFormAfterSubmit), ', null')
							+ COALESCE(', ''' + RTRIM(replace(f.buttonText, '''', '''''')) + '''', ', null') + CHAR(13)+CHAR(10) 
							+ COALESCE(', ''' + RTRIM(replace(f.users, '''', '''''')) + '''', ', null') + CHAR(13)+CHAR(10)
							+ COALESCE(', ''' + RTRIM(replace(f.roles, '''', '''''')) + '''', ', null') + CHAR(13)+CHAR(10)
							+'); ' + CHAR(13)+CHAR(10) 
						, 1, 2, '')
				+ 'select @formID = scope_identity(); end;' + CHAR(13)+CHAR(10)
				+ 'delete from as_formCols where as_formCols.formID = @formID;' + CHAR(13)+CHAR(10)
				+ 'end try' + CHAR(13)+CHAR(10)
				+ 'begin catch' + CHAR(13)+CHAR(10)
				+ 'set @formID = 0;' + CHAR(13)+CHAR(10)
				+ 'insert into #errors values(''form'', ' 
					+ isnull('''' + replace(f.code, '''', '''''') + ''' ,', 'null ,') + 'error_message());' + CHAR(13)+CHAR(10)
				+ 'end catch' + CHAR(13)+CHAR(10)
				+ replace((select LEFT(Main.Columns, Len(Main.Columns)) As Columns from (select ( 
					select 'begin try' + CHAR(13)+CHAR(10) + 
					'set @datatypeID = null; ' + CHAR(13)+CHAR(10)
					+ 'select @datatypeID = d.id from as_dataTypes as d where d.code = '
					 + isnull('''' + replace((select d.code from as_dataTypes as d where fc.datatypeID = d.id), '''', '''''') + '''', 'null') + '; ' + CHAR(13)+CHAR(10)
					+ ' insert into as_formCols ([formID],[code],[title],[placeholder],[tooltip],[ord],[datatypeID]' + CHAR(13)+CHAR(10)
					+ ',[isRequired],[sqlSource],[width],[dependentCols]) ' + CHAR(13)+CHAR(10)
					+ 'VALUES ( @formID, '			
						+ stuff(COALESCE(', ''' + RTRIM(replace(fc.code, '''', '''''')) + '''', ', null')
							+ COALESCE(', ''' + RTRIM(replace(fc.title, '''', '''''')) + '''', ', null') + CHAR(13)+CHAR(10)
							+ COALESCE(', ''' + RTRIM(replace(fc.placeholder, '''', '''''')) + '''', ', null') + CHAR(13)+CHAR(10)
							+ COALESCE(', ''' + RTRIM(replace(fc.tooltip, '''', '''''')) + '''', ', null') + CHAR(13)+CHAR(10)
							+ COALESCE(', ' + RTRIM(fc.ord), ', null')
							+ COALESCE(', @datatypeID', ', null')
							+ COALESCE(', ' + RTRIM(fc.isRequired), ', null')
							+ COALESCE(', ''' + RTRIM(replace(fc.sqlSource, '''', '''''')) + '''', ', null') + CHAR(13)+CHAR(10)
							+ COALESCE(', ''' + RTRIM(replace(fc.width, '''', '''''')) + '''', ', null') + CHAR(13)+CHAR(10)
							+ COALESCE(', ''' + RTRIM(replace(fc.dependentCols, '''', '''''')) + '''', ', null') + CHAR(13)+CHAR(10)
						, 1, 2, '') + ');' + CHAR(13)+CHAR(10)
						+ 'end try' + CHAR(13)+CHAR(10)
						+ 'begin catch' + CHAR(13)+CHAR(10)
						+ 'insert into #errors values(''formColumn'', ' 
						+ isnull('''' + replace(fc.code, '''', '''''') + ''' ,', 'null ,') + 'error_message());' + CHAR(13)+CHAR(10)
						+ 'end catch' + CHAR(13)+CHAR(10) from as_formCols as fc where f.id = fc.formID FOR XML PATH ('')) as Columns) as Main), '&#x0D;', '')
						+ 'select * from #errors; drop table #errors;' as Result from as_forms as f where f.code = @code order by f.id;				